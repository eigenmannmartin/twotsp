*** Step 1: ***
*** Step 2: ***
triangulating ...
build graph
#edges: 227 #nodes: 80
computing MST
took 0.0
computing delaunay of odd_deg_nodes
#edges: 97 #nodes: 36 36
computing minimum matching
took 0.0629999637604
#edges: 18 #nodes: 36
find euler tour
took 0.0
euler path:  [(0, 73), (73, 42), (42, 7), (7, 44), (44, 37), (37, 40), (40, 71), (71, 57), (57, 16), (16, 59), (59, 43), (43, 35), (35, 64), (64, 3), (3, 60), (60, 31), (31, 53), (53, 25), (25, 62), (62, 65), (65, 69), (69, 78), (78, 77), (77, 4), (4, 9), (9, 48), (48, 30), (30, 47), (47, 51), (51, 6), (6, 52), (52, 21), (21, 55), (55, 36), (36, 3), (3, 58), (58, 32), (32, 34), (34, 28), (28, 8), (8, 10), (10, 66), (66, 27), (27, 24), (24, 20), (20, 17), (17, 14), (14, 20), (20, 79), (79, 72), (72, 79), (79, 5), (5, 23), (23, 33), (33, 39), (39, 23), (23, 13), (13, 63), (63, 54), (54, 50), (50, 41), (41, 1), (1, 29), (29, 45), (45, 11), (11, 26), (26, 61), (61, 56), (56, 61), (61, 68), (68, 19), (19, 67), (67, 19), (19, 76), (76, 22), (22, 45), (45, 46), (46, 75), (75, 74), (74, 49), (49, 12), (12, 18), (18, 12), (12, 74), (74, 66), (66, 28), (28, 15), (15, 2), (2, 70), (70, 38), (38, 0)]
#edges: 91 #nodes: 80
start shortcutting
  --  start shortcutting visit  1
3 visited! 36
its a crossing
connected_visited_neighbors: 64 60
20 visited! 14
its a crossing
connected_visited_neighbors: None None
#its a real crossing!
79 visited! 72
----------- unhandled situation -----------
23 visited! 39
its a crossing
connected_visited_neighbors: 33 5
61 visited! 56
 looking forwards:  56 68  cutting  61
19 visited! 67
 looking forwards:  67 76  cutting  19
45 visited! 22
its a crossing
connected_visited_neighbors: None None
#its a real crossing!
12 visited! 18
 looking backwards:  49 18  cutting  12
74 visited! 12
its a crossing
connected_visited_neighbors: None None
#its a real crossing!
66 visited! 74
its a crossing
connected_visited_neighbors: 27 10
28 visited! 66
its a crossing
connected_visited_neighbors: 8 34
[(14, 20), (22, 45), (12, 74)]
#edges: 84 #crossings: 3
unfuddle (14, 20)
20 14 17 [24, 17, 5, 14, 79] [24]
unfuddle (22, 45)
45 22 76 [72, 11, 76, 46, 22, 29] [11, 46]
EE - no cross resolving
EE - no cross resolving
unfuddle (12, 74)
74 12 18 [66, 75, 12, 46, 49, 27] [75, 49]
EE - no cross resolving
  --  start shortcutting visit  2
79 visited! 72
 looking forwards:  72 5  cutting  79
45 visited! 22
its a crossing
connected_visited_neighbors: None None
#its a real crossing!
[(22, 45)]
#edges: 81 #crossings: 1
unfuddle (22, 45)
45 22 76 [72, 11, 76, 46, 22, 29] [11, 46]
EE - no cross resolving
EE - no cross resolving
  --  start shortcutting visit  3
45 visited! 22
 looking forwards:  22 46  cutting  45
[]
#edges: 80 #crossings: 0
  --  start shortcutting visit  4
[]
#edges: 80 #crossings: 0
  --  start shortcutting visit  5
[]
#edges: 80 #crossings: 0
took 0.0
#edges: 80 path len: 127798.442196
*** Step 3: ***
Best Solution:
Distance: 737001.129198
('Tour:  ', [(50, 13), (13, 40), (40, 21), (21, 17), (17, 74), (74, 10), (10, 71), (71, 62), (62, 22), (22, 72), (72, 47), (47, 16), (16, 25), (25, 30), (30, 23), (23, 33), (33, 27), (27, 61), (61, 31), (31, 63), (63, 56), (56, 58), (58, 9), (9, 12), (12, 54), (54, 77), (77, 51), (51, 5), (5, 1), (1, 55), (55, 60), (60, 20), (20, 68), (68, 70), (70, 11), (11, 75), (75, 38), (38, 59), (59, 64), (64, 41), (41, 44), (44, 65), (65, 52), (52, 0), (0, 67), (67, 26), (26, 24), (24, 78), (78, 43), (43, 66), (66, 3), (3, 42), (42, 35), (35, 14), (14, 6), (6, 76), (76, 49), (49, 8), (8, 36), (36, 46), (46, 45), (45, 15), (15, 19), (19, 73), (73, 7), (7, 39), (39, 53), (53, 48), (48, 34), (34, 18), (18, 37), (37, 28), (28, 4), (4, 29), (29, 2), (2, 32), (32, 79), (79, 69), (69, 57), (57, 50)])
('Route: ', [(0, 73), (73, 42), (42, 7), (7, 44), (44, 37), (37, 40), (40, 71), (71, 57), (57, 16), (16, 59), (59, 43), (43, 35), (35, 64), (64, 60), (60, 31), (31, 53), (53, 25), (25, 62), (62, 65), (65, 69), (69, 78), (78, 77), (77, 4), (4, 9), (9, 48), (48, 30), (30, 47), (47, 51), (51, 6), (6, 52), (52, 21), (21, 55), (55, 36), (36, 3), (3, 58), (58, 32), (32, 34), (34, 8), (8, 10), (10, 27), (27, 24), (24, 14), (14, 17), (17, 20), (20, 79), (79, 72), (72, 5), (5, 33), (33, 39), (39, 23), (23, 13), (13, 63), (63, 54), (54, 50), (50, 41), (41, 1), (1, 29), (29, 45), (45, 11), (11, 26), (26, 61), (61, 56), (56, 68), (68, 19), (19, 67), (67, 76), (76, 22), (22, 46), (46, 75), (75, 12), (12, 18), (18, 49), (49, 74), (74, 66), (66, 28), (28, 15), (15, 2), (2, 70), (70, 38), (38, 0)])
*** Step 4: ***
0 remaining unsolved duplicates
Path0: 127798.442196
Path0: [(0, 73), (73, 42), (42, 7), (7, 44), (44, 37), (37, 40), (40, 71), (71, 57), (57, 16), (16, 59), (59, 43), (43, 35), (35, 64), (64, 60), (60, 31), (31, 53), (53, 25), (25, 62), (62, 65), (65, 69), (69, 78), (78, 77), (77, 4), (4, 9), (9, 48), (48, 30), (30, 47), (47, 51), (51, 6), (6, 52), (52, 21), (21, 55), (55, 36), (36, 3), (3, 58), (58, 32), (32, 34), (34, 8), (8, 10), (10, 27), (27, 24), (24, 14), (14, 17), (17, 20), (20, 79), (79, 72), (72, 5), (5, 33), (33, 39), (39, 23), (23, 13), (13, 63), (63, 54), (54, 50), (50, 41), (41, 1), (1, 29), (29, 45), (45, 11), (11, 26), (26, 61), (61, 56), (56, 68), (68, 19), (19, 67), (67, 76), (76, 22), (22, 46), (46, 75), (75, 12), (12, 18), (18, 49), (49, 74), (74, 66), (66, 28), (28, 15), (15, 2), (2, 70), (70, 38), (38, 0)]
Path1: 737001.129198
Path1: [(50, 13), (13, 40), (40, 21), (21, 17), (17, 74), (74, 10), (10, 71), (71, 62), (62, 22), (22, 72), (72, 47), (47, 16), (16, 25), (25, 30), (30, 23), (23, 33), (33, 27), (27, 61), (61, 31), (31, 63), (63, 56), (56, 58), (58, 9), (9, 12), (12, 54), (54, 77), (77, 51), (51, 5), (5, 1), (1, 55), (55, 60), (60, 20), (20, 68), (68, 70), (70, 11), (11, 75), (75, 38), (38, 59), (59, 64), (64, 41), (41, 44), (44, 65), (65, 52), (52, 0), (0, 67), (67, 26), (26, 24), (24, 78), (78, 43), (43, 66), (66, 3), (3, 42), (42, 35), (35, 14), (14, 6), (6, 76), (76, 49), (49, 8), (8, 36), (36, 46), (46, 45), (45, 15), (15, 19), (19, 73), (73, 7), (7, 39), (39, 53), (53, 48), (48, 34), (34, 18), (18, 37), (37, 28), (28, 4), (4, 29), (29, 2), (2, 32), (32, 79), (79, 69), (69, 57), (57, 50)]
*** Step 5: ***
Results:
Path0: 127798.442196 / 127798.442196
Path1: 737001.129198 / 737001.129198
shortes possible Path 491334.086132
path0 1.5*
path1 8.6503534378*
path0-path1 5.76690229187*
